#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export IMAGE_BASE=${IMAGE_BASE:="bravo-docker"}
export IMAGE_LILYPAD=${IMAGE_LILYPAD:="${IMAGE_BASE}-python"}
export IMAGE_HARDHAT=${IMAGE_HARDHAT:="${IMAGE_BASE}-js"}
export IMAGE_INFLUX=${IMAGE_INFLUX:="influxdb:1.8.10"}
export HARDHAT_IP=${HARDHAT_IP:="127.0.0.1"}
export HARDHAT_PORT=${HARDHAT_PORT:="10000"}
export CONTRACT_ADDRESS=${CONTRACT_ADDRESS:=""}

function build-lilypad() {
  docker build -t $IMAGE_LILYPAD src/python
}

function build-hardhat() {
  docker build -t $IMAGE_HARDHAT src/js
}

function build() {
  build-lilypad
  build-hardhat
}

function hardhat() {
  docker run -ti --rm \
    --name hardhat \
    --net host \
    -v $DIR/src/js/deployments:/app/deployments \
    $IMAGE_HARDHAT npx hardhat node --hostname 0.0.0.0 --port $HARDHAT_PORT
}

function geth() {
  echo password > /tmp/geth-password.txt
  docker run --rm -ti \
    --name geth \
    -p 8545:8545 \
    -v /tmp/geth-password.txt:/password.txt \
    -v /tmp/geth:/tmp/geth \
    ethereum/client-go \
      --datadir /tmp/geth \
      --dev --http \
      --http.api web3,eth,net \
      --http.addr 0.0.0.0 \
      --password /password.txt
}

function address() {
  cat src/js/deployments/localhost/Modicum.json | jq -r .address
}

function influx() {
  docker run -d \
    --name influx \
    --net host \
    $IMAGE_INFLUX
  sleep 1
  echo -n 'create database collectd;' | docker exec -i influx influx
}

# this means run ipfs, bacalhau and the modicum resource provider
# in the same container - it is what nodes will run on their hardware
#
# NB: Bind-mounting the code is debug trim, take this out for prod
function lilypad-node() {
  docker run --name lilypad-node -ti --rm \
    --net host \
    -v /tmp:/tmp \
    -v $DIR/src/python:/app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -e CONTRACT_ADDRESS=$(address) \
    $IMAGE_LILYPAD "$@" 
}

function lilypad-logs() {
  docker exec -ti lilypad-node supervisorctl tail -f bacalhau-serve stdout &
  docker exec -ti lilypad-node supervisorctl tail -f bacalhau-serve stderr &
  docker exec -ti lilypad-node supervisorctl tail -f ipfs stdout &
  docker exec -ti lilypad-node supervisorctl tail -f ipfs stderr &
  docker exec -ti lilypad-node supervisorctl tail -f modicum-resource-provider stdout &
  docker exec -ti lilypad-node supervisorctl tail -f modicum-resource-provider stderr
}

# run a single modicum process without ipfs or bacalhau
#
# NB: Bind-mounting the code is debug trim, take this out for prod
function lilypad-modicum-process() {
  docker run --name lilypad-$1 -ti --rm \
    --net host \
    --entrypoint "/usr/local/bin/modicum" \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $DIR/src/python:/app \
    -e CONTRACT_ADDRESS=$(address) \
    $IMAGE_LILYPAD "$@" 
}

eval "$@"