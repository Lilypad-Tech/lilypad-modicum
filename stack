#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export IMAGE_BASE=${IMAGE_BASE:="bravo-docker"}
export IMAGE_MODICUM=${IMAGE_MODICUM:="${IMAGE_BASE}-modicum"}
export IMAGE_RESOURCE_PROVIDER=${IMAGE_RESOURCE_PROVIDER:="${IMAGE_BASE}-resource-provider"}
export IMAGE_HARDHAT=${IMAGE_HARDHAT:="${IMAGE_BASE}-hardhat"}
export IMAGE_MEDIATOR=${IMAGE_MEDIATOR:="${IMAGE_BASE}-mediator"}
export DEPLOYMENT=${DEPLOYMENT:="localgeth"}

function build-modicum() {
  docker build -t $IMAGE_MODICUM --target modicum .
}

function build-resource-provider() {
  docker build -t $IMAGE_RESOURCE_PROVIDER --target resource-provider .
}

function build-mediator() {
  docker build -t $IMAGE_MEDIATOR --target mediator .
}

function build-hardhat() {
  docker build -t $IMAGE_HARDHAT src/js
}

function build() {
  build-modicum
  build-resource-provider
  build-mediator
  build-hardhat
}

function contract-address() {
  cat "src/js/deployments/${DEPLOYMENT}/Modicum.json" | jq -r .address
}

function hardhat() {
  docker run -ti --rm \
    --name hardhat \
    --net host \
    -v $DIR/src/js/deployments:/app/deployments \
    $IMAGE_HARDHAT npx hardhat node --hostname 0.0.0.0 --port 8545
}

function geth() {
  docker run --rm -ti \
    --name geth \
    -p 8545:8545 \
    -v /tmp/geth:/data/geth \
    ethereum/client-go \
      --datadir /data/geth \
      --dev --http \
      --http.api web3,eth,net \
      --http.addr 0.0.0.0
}

function geth-command() {
  docker exec -ti geth geth --exec "$@" attach /data/geth/geth.ipc
}

function geth-balance() {
  address="$1"
  # check if address is defined
  if [[ -z "$address" ]]; then
    echo >&2 "address must be set"
    exit 1
  fi
  geth-command "eth.getBalance(\"${address}\")/1e18"
}

function geth-fund() {
  address="$1"
  # check if address is defined
  if [[ -z "$address" ]]; then
    echo >&2 "address must be set"
    exit 1
  fi
  geth-command "eth.sendTransaction({from: eth.coinbase, to: \"${address}\", value: web3.toWei(10000000000000, \"ether\")})"
}

# this means run ipfs, bacalhau and the modicum resource provider
# in the same service - it is what nodes will run on their hardware
#
# NB: Bind-mounting the code is debug trim, take this out for prod
function lilypad-node() {
  if [[ -z "$LILYPAD_NODE_IMAGE" ]]; then
    echo >&2 "LILYPAD_NODE_IMAGE must be set"
  fi
  if [[ -z "$LILYPAD_NODE_NAME" ]]; then
    echo >&2 "LILYPAD_NODE_NAME must be set"
  fi
  docker run $LILYPAD_NODE_FLAGS --name $LILYPAD_NODE_NAME \
    --net host \
    -v /tmp:/tmp \
    -v $DIR/src/python:/app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -e CONTRACT_ADDRESS=$(contract-address) \
    -e RPC_URL=http://127.0.0.1:8545 \
    -e CONTRACT_ABI_FILE=/Modicum.json \
    -e GETHIP=127.0.0.1 \
    -e GETHPORT=8545 \
    $LILYPAD_NODE_IMAGE "$@" 
}

function logs() {
  service="$1"
  docker exec -ti $service supervisorctl tail -f bacalhau-serve stdout &
  docker exec -ti $service supervisorctl tail -f bacalhau-serve stderr &
  docker exec -ti $service supervisorctl tail -f ipfs stdout &
  docker exec -ti $service supervisorctl tail -f ipfs stderr &
  docker exec -ti $service supervisorctl tail -f $service stdout &
  docker exec -ti $service supervisorctl tail -f $service stderr
}

function resource-provider() {
  LILYPAD_NODE_IMAGE=$IMAGE_RESOURCE_PROVIDER \
  LILYPAD_NODE_NAME=resource-provider \
  LILYPAD_NODE_FLAGS="-d" \
  lilypad-node "$@"
  logs resource-provider
}

function mediator() {
  LILYPAD_NODE_IMAGE=$IMAGE_MEDIATOR \
  LILYPAD_NODE_NAME=mediator \
  LILYPAD_NODE_FLAGS="-d" \
  lilypad-node "$@"
  logs mediator
}

function solver() {
  LILYPAD_NODE_IMAGE=$IMAGE_MODICUM \
  LILYPAD_NODE_NAME=solver \
  LILYPAD_NODE_FLAGS="--rm" \
  lilypad-node "runAsSolver"
}

eval "$@"