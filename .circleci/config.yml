version: 2.1
commands:
  setup:
    steps:
      - checkout
      - run:
          name: setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build

jobs:
  test-cli:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - run:
          name: Test CLI
          command: |
            set -x
            # Install node
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt -y install nodejs
            # Build contract
            ./stack reset
            ./stack start
            ./stack submitjob --template cowsay:v0.0.1 --params "ohai from CI"
  test-contract-unit:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - run:
          name: Test smart contract
          command: |
            set -x
            # Install node
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt -y install nodejs
            ./stack reset
            ./stack unit-tests
  test-contract-smoke:
    machine:
      image: ubuntu-2204:2023.04.2
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Test smart contract
          command: |
            set -x
            # Install node
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt -y install nodejs
            # Build contract
            ./stack reset
            ./stack start
            ./stack geth-script scripts/smoke-test.js
  test-integration:
    machine:
      image: ubuntu-2004-cuda-11.4:202110-01
    resource_class: gpu.nvidia.medium
    steps:
      - checkout
      - run:
          name: Integration tests for modules
          command: |
            set -x
            # The gpu node that circle gives us has an ancient version of docker
            # that mysteriously fails with the following error inside the docker
            # build (./stack build etc):
            #
            #   E: Problem executing scripts APT::Update::Post-Invoke 'rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true'
            #   E: Sub-process returned an error code
            #   The command '/bin/sh -c apt-get update &&     apt-get install -y       curl       python3-pip       python3-virtualenv       python3-dev       libssl-dev       libcurl4-openssl-dev       jq       tzdata       docker.io' returned a non-zero code: 100
            #
            # We workaround this by upgrading docker.

            sudo apt-get update
            sudo apt-get install ca-certificates curl gnupg
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            # Install node
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt -y install nodejs
            # Build contract
            ./stack reset
            ./stack start
            ./stack integration-tests
  build:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - setup
      - run:
          name: Login to image registry
          command: |
            docker login quay.io -u $QUAY_USER -p $QUAY_PASS
      - run:
          name: Build multiarch docker image and push
          command: |
            set -x
            # Install node
            curl -sL https://deb.nodesource.com/setup_16.x | sudo bash -
            sudo apt -y install nodejs
            # Build contract
            ./stack reset
            # Build and push docker images
            export DOCKER_CLI_EXPERIMENTAL=enabled
            for X in modicum resource-provider mediator; do
              docker buildx build --target $X --push \
                --platform linux/arm64,linux/amd64 \
                -t quay.io/lilypad/lilypad-$X:$(git rev-parse --short HEAD) .
            done
workflows:
  version: 2.1
  build-push-test:
    jobs:
      - build
      - test-cli
      - test-contract-unit
      - test-contract-smoke
      - test-integration
