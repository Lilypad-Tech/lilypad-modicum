{
  "address": "0x219F074D9b14410868105420eEEa9Ba768a7aAE1",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reactionDeadline",
          "type": "uint256"
        }
      ],
      "name": "setReactionDeadline",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "ijoid",
          "type": "uint256"
        },
        {
          "name": "ramLimit",
          "type": "uint256"
        },
        {
          "name": "localStorageLimit",
          "type": "uint256"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "directory",
          "type": "address"
        },
        {
          "name": "jobHash",
          "type": "uint256"
        },
        {
          "name": "arch",
          "type": "uint8"
        },
        {
          "name": "extras",
          "type": "string"
        }
      ],
      "name": "postJobOfferPartTwo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "arch",
          "type": "uint8"
        },
        {
          "name": "instructionPrice",
          "type": "uint256"
        },
        {
          "name": "bandwidthPrice",
          "type": "uint256"
        },
        {
          "name": "availabilityValue",
          "type": "uint256"
        },
        {
          "name": "verificationCount",
          "type": "uint256"
        }
      ],
      "name": "registerMediator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "resourceProviderAddTrustedMediator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "test",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "resultId",
          "type": "uint256"
        },
        {
          "name": "jobOfferId",
          "type": "uint256"
        }
      ],
      "name": "rejectResult",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "ijoid",
          "type": "uint256"
        },
        {
          "name": "instructionLimit",
          "type": "uint256"
        },
        {
          "name": "bandwidthLimit",
          "type": "uint256"
        },
        {
          "name": "instructionMaxPrice",
          "type": "uint256"
        },
        {
          "name": "bandwidthMaxPrice",
          "type": "uint256"
        },
        {
          "name": "completionDeadline",
          "type": "uint256"
        },
        {
          "name": "matchIncentive",
          "type": "uint256"
        }
      ],
      "name": "postJobOfferPartOne",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "firstLayerHash",
          "type": "uint256"
        }
      ],
      "name": "mediatorAddSupportedFirstLayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "firstLayerHash",
          "type": "uint256"
        }
      ],
      "name": "resourceProviderAddSupportedFirstLayer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "matchId",
          "type": "uint256"
        },
        {
          "name": "jobOfferId",
          "type": "uint256"
        }
      ],
      "name": "timeout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "arch",
          "type": "uint8"
        }
      ],
      "name": "check",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "arch",
          "type": "uint8"
        },
        {
          "name": "timePerInstruction",
          "type": "uint256"
        }
      ],
      "name": "registerResourceProvider",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "toAccount",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "receiveValues",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "cancelResOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "directory",
          "type": "address"
        }
      ],
      "name": "mediatorAddTrustedDirectory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "jobCreatorAddTrustedMediator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_penaltyRate",
          "type": "uint256"
        }
      ],
      "name": "setPenaltyRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "cancelJobOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "instructionPrice",
          "type": "uint256"
        },
        {
          "name": "instructionCap",
          "type": "uint256"
        },
        {
          "name": "memoryCap",
          "type": "uint256"
        },
        {
          "name": "localStorageCap",
          "type": "uint256"
        },
        {
          "name": "bandwidthCap",
          "type": "uint256"
        },
        {
          "name": "bandwidthPrice",
          "type": "uint256"
        },
        {
          "name": "matchIncentive",
          "type": "uint256"
        },
        {
          "name": "verificationCount",
          "type": "uint256"
        },
        {
          "name": "misc",
          "type": "uint256"
        }
      ],
      "name": "postResOffer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "matchId",
          "type": "uint256"
        },
        {
          "name": "jobOfferId",
          "type": "uint256"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "hash",
          "type": "uint256"
        },
        {
          "name": "instructionCount",
          "type": "uint256"
        },
        {
          "name": "bandwidthUsage",
          "type": "uint256"
        },
        {
          "name": "verdict",
          "type": "uint8"
        },
        {
          "name": "faultyParty",
          "type": "uint8"
        }
      ],
      "name": "postMediationResult",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "registerJobCreator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "directory",
          "type": "address"
        }
      ],
      "name": "resourceProviderAddTrustedDirectory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "mediators",
      "outputs": [
        {
          "name": "arch",
          "type": "uint8"
        },
        {
          "name": "instructionPrice",
          "type": "uint256"
        },
        {
          "name": "bandwidthPrice",
          "type": "uint256"
        },
        {
          "name": "availabilityValue",
          "type": "uint256"
        },
        {
          "name": "verificationCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "resultId",
          "type": "uint256"
        },
        {
          "name": "jobOfferId",
          "type": "uint256"
        }
      ],
      "name": "acceptResult",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "matchId",
          "type": "uint256"
        },
        {
          "name": "jobOfferId",
          "type": "uint256"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "hash",
          "type": "uint256"
        },
        {
          "name": "instructionCount",
          "type": "uint256"
        },
        {
          "name": "bandwidthUsage",
          "type": "uint256"
        }
      ],
      "name": "postResult",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "jobOfferId",
          "type": "uint256"
        },
        {
          "name": "resourceOfferId",
          "type": "uint256"
        },
        {
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "postMatch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "arch",
          "type": "uint8"
        }
      ],
      "name": "DebugArch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "DebugUint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "str",
          "type": "string"
        }
      ],
      "name": "DebugString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "penaltyRate",
          "type": "uint256"
        }
      ],
      "name": "penaltyRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "reactionDeadline",
          "type": "uint256"
        }
      ],
      "name": "reactionDeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ResultReaction",
          "type": "uint256"
        }
      ],
      "name": "ResultReaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "resultId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "instructionCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthUsage",
          "type": "uint256"
        }
      ],
      "name": "ResultPosted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "jobOfferId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "resourceOfferId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "Matched",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ijoid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "instructionLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "instructionMaxPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthMaxPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "completionDeadline",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "deposit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matchIncentive",
          "type": "uint256"
        }
      ],
      "name": "JobOfferPostedPartOne",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "directory",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "arch",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "ramLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "localStorageLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "extras",
          "type": "string"
        }
      ],
      "name": "JobOfferPostedPartTwo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "instructionPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "instructionCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "memoryCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "localStorageCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "deposit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "iroid",
          "type": "uint256"
        }
      ],
      "name": "ResourceOfferPosted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "JobOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "resOfferId",
          "type": "uint256"
        }
      ],
      "name": "ResourceOfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "JobAssignedForMediation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "arch",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "instructionPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bandwidthPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "availabilityValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "verificationCount",
          "type": "uint256"
        }
      ],
      "name": "MediatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "firstLayerHash",
          "type": "uint256"
        }
      ],
      "name": "MediatorAddedSupportedFirstLayer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "arch",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timePerInstruction",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "penaltyRate",
          "type": "uint256"
        }
      ],
      "name": "ResourceProviderRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "ResourceProviderAddedTrustedMediator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "penaltyRate",
          "type": "uint256"
        }
      ],
      "name": "JobCreatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "mediator",
          "type": "address"
        }
      ],
      "name": "JobCreatorAddedTrustedMediator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "directory",
          "type": "address"
        }
      ],
      "name": "MediatorAddedTrustedDirectory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "directory",
          "type": "address"
        }
      ],
      "name": "ResourceProviderAddedTrustedDirectory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "firstLayer",
          "type": "uint256"
        }
      ],
      "name": "ResourceProviderAddedSupportedFirstLayer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "faultyParty",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "verdict",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "uri",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "hash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "instructionCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "mediationCost",
          "type": "uint256"
        }
      ],
      "name": "MediationResultPosted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cost",
          "type": "uint256"
        }
      ],
      "name": "MatchClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cause",
          "type": "uint8"
        }
      ],
      "name": "EtherTransferred",
      "type": "event"
    }
  ],
  "transactionHash": "0xc3f8aef758c3fab4a950e255d3ecaf5a8924303a7ad7e74c46353ca016798e92",
  "receipt": {
    "to": null,
    "from": "0x6237F8FA960f330BC44D8066F886Bde1d4a1a339",
    "contractAddress": "0x219F074D9b14410868105420eEEa9Ba768a7aAE1",
    "transactionIndex": 0,
    "gasUsed": "3923330",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x633d69c78b9c003f43cff429469ee796e5281842dc794b11957abc7aa2518ff2",
    "transactionHash": "0xc3f8aef758c3fab4a950e255d3ecaf5a8924303a7ad7e74c46353ca016798e92",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "3923330",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c7394e5bd407d88cc83106039d048e6c",
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_reactionDeadline\",\"type\":\"uint256\"}],\"name\":\"setReactionDeadline\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ijoid\",\"type\":\"uint256\"},{\"name\":\"ramLimit\",\"type\":\"uint256\"},{\"name\":\"localStorageLimit\",\"type\":\"uint256\"},{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"directory\",\"type\":\"address\"},{\"name\":\"jobHash\",\"type\":\"uint256\"},{\"name\":\"arch\",\"type\":\"uint8\"},{\"name\":\"extras\",\"type\":\"string\"}],\"name\":\"postJobOfferPartTwo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"arch\",\"type\":\"uint8\"},{\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"name\":\"bandwidthPrice\",\"type\":\"uint256\"},{\"name\":\"availabilityValue\",\"type\":\"uint256\"},{\"name\":\"verificationCount\",\"type\":\"uint256\"}],\"name\":\"registerMediator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"resourceProviderAddTrustedMediator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"test\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"resultId\",\"type\":\"uint256\"},{\"name\":\"jobOfferId\",\"type\":\"uint256\"}],\"name\":\"rejectResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ijoid\",\"type\":\"uint256\"},{\"name\":\"instructionLimit\",\"type\":\"uint256\"},{\"name\":\"bandwidthLimit\",\"type\":\"uint256\"},{\"name\":\"instructionMaxPrice\",\"type\":\"uint256\"},{\"name\":\"bandwidthMaxPrice\",\"type\":\"uint256\"},{\"name\":\"completionDeadline\",\"type\":\"uint256\"},{\"name\":\"matchIncentive\",\"type\":\"uint256\"}],\"name\":\"postJobOfferPartOne\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"firstLayerHash\",\"type\":\"uint256\"}],\"name\":\"mediatorAddSupportedFirstLayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"firstLayerHash\",\"type\":\"uint256\"}],\"name\":\"resourceProviderAddSupportedFirstLayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"matchId\",\"type\":\"uint256\"},{\"name\":\"jobOfferId\",\"type\":\"uint256\"}],\"name\":\"timeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"arch\",\"type\":\"uint8\"}],\"name\":\"check\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"arch\",\"type\":\"uint8\"},{\"name\":\"timePerInstruction\",\"type\":\"uint256\"}],\"name\":\"registerResourceProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAccount\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveValues\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"cancelResOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"directory\",\"type\":\"address\"}],\"name\":\"mediatorAddTrustedDirectory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"jobCreatorAddTrustedMediator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_penaltyRate\",\"type\":\"uint256\"}],\"name\":\"setPenaltyRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"cancelJobOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"name\":\"instructionCap\",\"type\":\"uint256\"},{\"name\":\"memoryCap\",\"type\":\"uint256\"},{\"name\":\"localStorageCap\",\"type\":\"uint256\"},{\"name\":\"bandwidthCap\",\"type\":\"uint256\"},{\"name\":\"bandwidthPrice\",\"type\":\"uint256\"},{\"name\":\"matchIncentive\",\"type\":\"uint256\"},{\"name\":\"verificationCount\",\"type\":\"uint256\"},{\"name\":\"misc\",\"type\":\"uint256\"}],\"name\":\"postResOffer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"matchId\",\"type\":\"uint256\"},{\"name\":\"jobOfferId\",\"type\":\"uint256\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"uint256\"},{\"name\":\"instructionCount\",\"type\":\"uint256\"},{\"name\":\"bandwidthUsage\",\"type\":\"uint256\"},{\"name\":\"verdict\",\"type\":\"uint8\"},{\"name\":\"faultyParty\",\"type\":\"uint8\"}],\"name\":\"postMediationResult\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registerJobCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"directory\",\"type\":\"address\"}],\"name\":\"resourceProviderAddTrustedDirectory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mediators\",\"outputs\":[{\"name\":\"arch\",\"type\":\"uint8\"},{\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"name\":\"bandwidthPrice\",\"type\":\"uint256\"},{\"name\":\"availabilityValue\",\"type\":\"uint256\"},{\"name\":\"verificationCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"resultId\",\"type\":\"uint256\"},{\"name\":\"jobOfferId\",\"type\":\"uint256\"}],\"name\":\"acceptResult\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"matchId\",\"type\":\"uint256\"},{\"name\":\"jobOfferId\",\"type\":\"uint256\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"uri\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"uint256\"},{\"name\":\"instructionCount\",\"type\":\"uint256\"},{\"name\":\"bandwidthUsage\",\"type\":\"uint256\"}],\"name\":\"postResult\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"jobOfferId\",\"type\":\"uint256\"},{\"name\":\"resourceOfferId\",\"type\":\"uint256\"},{\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"postMatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"Debug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"arch\",\"type\":\"uint8\"}],\"name\":\"DebugArch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DebugUint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"str\",\"type\":\"string\"}],\"name\":\"DebugString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"penaltyRate\",\"type\":\"uint256\"}],\"name\":\"penaltyRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"reactionDeadline\",\"type\":\"uint256\"}],\"name\":\"reactionDeadlineSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"resultId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ResultReaction\",\"type\":\"uint256\"}],\"name\":\"ResultReaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"resultId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"instructionCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthUsage\",\"type\":\"uint256\"}],\"name\":\"ResultPosted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jobOfferId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"resourceOfferId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"Matched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ijoid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"instructionLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"instructionMaxPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthMaxPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"completionDeadline\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"deposit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"matchIncentive\",\"type\":\"uint256\"}],\"name\":\"JobOfferPostedPartOne\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"directory\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"arch\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"ramLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"localStorageLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"extras\",\"type\":\"string\"}],\"name\":\"JobOfferPostedPartTwo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"instructionCap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"memoryCap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"localStorageCap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthCap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"deposit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"iroid\",\"type\":\"uint256\"}],\"name\":\"ResourceOfferPosted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"JobOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"resOfferId\",\"type\":\"uint256\"}],\"name\":\"ResourceOfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"JobAssignedForMediation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"arch\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bandwidthPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"availabilityValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"verificationCount\",\"type\":\"uint256\"}],\"name\":\"MediatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"firstLayerHash\",\"type\":\"uint256\"}],\"name\":\"MediatorAddedSupportedFirstLayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"arch\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timePerInstruction\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"penaltyRate\",\"type\":\"uint256\"}],\"name\":\"ResourceProviderRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"ResourceProviderAddedTrustedMediator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"penaltyRate\",\"type\":\"uint256\"}],\"name\":\"JobCreatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"JobCreatorAddedTrustedMediator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"directory\",\"type\":\"address\"}],\"name\":\"MediatorAddedTrustedDirectory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"directory\",\"type\":\"address\"}],\"name\":\"ResourceProviderAddedTrustedDirectory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"firstLayer\",\"type\":\"uint256\"}],\"name\":\"ResourceProviderAddedSupportedFirstLayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"faultyParty\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"verdict\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"instructionCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"mediationCost\",\"type\":\"uint256\"}],\"name\":\"MediationResultPosted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"MatchClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cause\",\"type\":\"uint8\"}],\"name\":\"EtherTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Modicum.sol\":\"Modicum\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Modicum.sol\":{\"content\":\"pragma solidity ^0.4.25;\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract Modicum {\\n\\n    uint256 penaltyRate;\\n    address owner = msg.sender;\\n    uint256 reactionDeadline;\\n\\n    modifier administrative {\\n        if (msg.sender == owner)\\n            _;\\n        else\\n            revert('You cannot call me!');\\n        // _;\\n    }\\n\\n    enum Architecture {\\n        amd64,\\n        armv7\\n    }\\n\\n    struct JobCreator {\\n        address[] trustedMediators;\\n        uint256 itShouldntBeHere; //If I don't add it, I cannot make array of JC public\\n    }\\n\\n    struct ResourceProvider {\\n        address[] trustedMediators;\\n        address[] trustedDirectories;\\n        uint256[] supportedFirstLayers;\\n        Architecture arch;\\n        uint256 timePerInstruction;\\n    }\\n\\n    struct Mediator {\\n        Architecture arch;\\n\\n        uint256 instructionPrice;\\n        uint256 bandwidthPrice;\\n        address[] trustedDirectories;\\n        uint256[] supportedFirstLayers;\\n\\n        uint256 availabilityValue;\\n\\n        uint256 verificationCount;\\n    }\\n\\n    struct JobOfferPartOne {\\n        address jobCreator;\\n        uint256 depositValue;\\n\\n        uint256 instructionLimit;\\n        uint256 bandwidthLimit;\\n\\n        uint256 instructionMaxPrice;\\n        uint256 bandwidthMaxPrice;\\n\\n        uint256 completionDeadline;\\n\\n        uint256 matchIncentive;\\n    }\\n\\n    struct JobOfferPartTwo {\\n        address jobCreator;\\n        uint256 ramLimit;\\n        uint256 localStorageLimit;\\n        string uri;\\n        address directory;\\n        uint256 jobHash;\\n        Architecture arch;\\n        string extras;\\n    }\\n\\n    struct ResourceOffer {\\n\\n        address resProvider;\\n        uint256 depositValue;\\n\\n        uint256 instructionPrice;\\n        uint256 instructionCap;\\n\\n        uint256 memoryCap;\\n        uint256 localStorageCap;\\n\\n        uint256 bandwidthCap;\\n        uint256 bandwidthPrice;\\n\\n        uint256 matchIncentive;\\n\\n        uint256 verificationCount;\\n    }\\n\\n    enum ResultStatus {\\n        Completed,\\n        Declined,\\n        JobDescriptionError,\\n        JobNotFound,\\n        MemoryExceeded,\\n        StorageExceeded,\\n        InstructionsExceeded,\\n        BandwidthExceeded,\\n        ExceptionOccured,\\n        DirectoryUnavailable\\n//        LayerSizeExceeded,\\n//        ResultNotFound\\n    }\\n\\n    struct Match {\\n        uint256 resourceOffer;\\n        uint256 jobOffer;\\n        address mediator;\\n    }\\n\\n    struct JobResult {\\n        ResultStatus status;\\n        string uri;\\n\\n        uint256 matchId;\\n\\n        uint256 hash;\\n\\n        uint256 instructionCount;\\n        uint256 bandwidthUsage;\\n\\n        Reaction reacted;\\n        uint256 timestamp;\\n    }\\n\\n    struct MediatorResult {\\n        ResultStatus status;\\n        string uri;\\n\\n        uint256 matchId;\\n\\n        uint256 hash;\\n\\n        uint256 instructionCount;\\n        uint256 bandwidthUsage;\\n\\n        Verdict verdict;\\n        Party faultyParty;\\n    }\\n\\n    enum Party {\\n        ResourceProvider,\\n        JobCreator\\n    }\\n\\n    enum Verdict {\\n        ResultNotFound,\\n        TooMuchCost,\\n        WrongResults,\\n        CorrectResults,\\n        InvalidResultStatus\\n    }\\n\\n    enum Reaction {\\n        Accepted,\\n        Rejected,\\n        None\\n    }\\n\\n    enum EtherTransferCause {\\n        PostJobOffer,\\n        PostResourceOffer,\\n        CancelJobOffer,\\n        CancelResOffer,\\n        Punishment,\\n        Mediation,\\n        FinishingJob,\\n        FinishingResource,\\n        PostMatch,\\n        MediatorAvailability\\n    }\\n\\n    event Debug(uint64 value);\\n    event DebugArch(Architecture arch);\\n    event DebugUint(uint256 value);\\n    event DebugString(string str);\\n    event penaltyRateSet(uint256 penaltyRate);\\n    event reactionDeadlineSet(uint256 reactionDeadline);\\n\\n    event ResultReaction(address addr, uint256 resultId, uint256 matchId, uint256 ResultReaction);\\n    event ResultPosted(address addr, uint256 resultId, uint256 matchId, ResultStatus status, string uri,\\n                       uint256 hash, uint256 instructionCount, uint256 bandwidthUsage);\\n    event Matched(address addr, uint256 matchId, uint256 jobOfferId, uint256 resourceOfferId, address mediator); //the same as job assigned.\\n\\n    event JobOfferPostedPartOne(uint256 offerId, uint256 ijoid, address addr, uint256 instructionLimit,\\n                                uint256 bandwidthLimit, uint256 instructionMaxPrice, uint256 bandwidthMaxPrice, uint256 completionDeadline, uint256 deposit, uint256 matchIncentive);\\n\\n    event JobOfferPostedPartTwo(uint256 offerId, address addr, uint256 hash, string uri,\\n                                address directory, Architecture arch, uint256 ramLimit, uint256 localStorageLimit, string extras);\\n\\n    event ResourceOfferPosted(uint256 offerId, address addr, uint256 instructionPrice,\\n                              uint256 instructionCap, uint256 memoryCap, uint256 localStorageCap,\\n                              uint256 bandwidthCap, uint256 bandwidthPrice, uint256 deposit, uint256 iroid);\\n\\n    event JobOfferCanceled(uint256 offerId);\\n    event ResourceOfferCanceled(uint256 resOfferId);\\n    event JobAssignedForMediation(address addr, uint256 matchId);\\n\\n    event MediatorRegistered(address addr, Architecture arch, uint256 instructionPrice, uint256 bandwidthPrice,\\n                             uint256 availabilityValue, uint256 verificationCount);\\n\\n    event MediatorAddedSupportedFirstLayer(address addr, uint256 firstLayerHash);\\n\\n    event ResourceProviderRegistered(address addr, Architecture arch, uint256 timePerInstruction, uint256 penaltyRate);\\n    event ResourceProviderAddedTrustedMediator(address addr, address mediator);\\n    event JobCreatorRegistered(address addr, uint256 penaltyRate);\\n    event JobCreatorAddedTrustedMediator(address addr, address mediator);\\n    event MediatorAddedTrustedDirectory(address addr, address directory);\\n    event ResourceProviderAddedTrustedDirectory(address addr, address directory);\\n    event ResourceProviderAddedSupportedFirstLayer(address addr, uint256 firstLayer);\\n\\n    event MediationResultPosted(uint256 matchId, address addr, uint256 result, Party faultyParty, Verdict verdict, ResultStatus status,\\n                                string uri, uint256 hash, uint256 instructionCount, uint256 mediationCost);\\n\\n    event MatchClosed(uint256 matchId, uint256 cost);\\n\\n    event EtherTransferred(address _from, address to, uint256 value, EtherTransferCause cause);\\n\\n    mapping(address => Mediator) public mediators;\\n    // mapping(uint256 => address) public mediator_index;\\n    // uint mediator_count;\\n    // address[] mediator_index;\\n\\n    mapping(address => ResourceProvider) resourceProviders;\\n    mapping(address => JobCreator) jobCreators;\\n\\n    ResourceOffer[] resourceOffers;\\n    uint256 joIndex = 1;\\n    mapping(uint256 => JobOfferPartOne) jobOffersPartOne;\\n    mapping(uint256 => JobOfferPartTwo) jobOffersPartTwo;\\n    mapping(address => mapping(uint256 => uint256)) findJOIndex; // findJOIndex[addressOfJC][jcInternalOfferId]\\n\\n    Match[] matches;\\n    JobResult[] results;\\n    MediatorResult[] mediatorResults;\\n\\n    mapping(uint256 => bool) jobOfferPartOnePosted;\\n    mapping(uint256 => bool) jobOfferPartTwoPosted;\\n\\n    mapping(uint256 => bool) mediationRequested;\\n    mapping(uint256 => bool) mediated;\\n    mapping(uint256 => uint256) matchToResult;\\n    mapping(uint256 => bool) resultAvailable;\\n\\n    mapping(uint256 => bool) jobOfferMatched;\\n    mapping(uint256 => bool) resOfferMatched;\\n\\n    mapping(uint256 => bool) isJobOfferCanceled;\\n    mapping(uint256 => bool) isResOfferCanceled;\\n    mapping(uint256 => bool) isMatchClosed;\\n\\n    function () external payable {\\n        revert(\\\"Why are you calling me?\\\");\\n    }\\n\\n    function test(uint256 value) public{\\n      require(value > 0,\\n      \\\"This should be greater than 0\\\");\\n      emit DebugUint(value);\\n    }\\n\\n    function check(Architecture arch) public{\\n        //Architecture arch = Architecture.amd64;\\n        emit Debug(5);\\n        emit DebugArch(arch);\\n        emit DebugUint(1);\\n    }\\n\\n    function setPenaltyRate(uint256 _penaltyRate) public administrative {\\n        penaltyRate = _penaltyRate;\\n        emit penaltyRateSet(penaltyRate);\\n    }\\n\\n    function setReactionDeadline(uint256 _reactionDeadline) public administrative {\\n        reactionDeadline = _reactionDeadline;\\n        emit reactionDeadlineSet(_reactionDeadline);\\n    }\\n\\n\\n    function registerMediator(\\n        Architecture arch,\\n        uint256 instructionPrice,\\n        uint256 bandwidthPrice,\\n        uint256 availabilityValue,\\n        uint256 verificationCount\\n    ) public {\\n        address[] memory trustedDirectories;\\n        uint256[] memory supportedFirstLayers;\\n        mediators[msg.sender] = Mediator({\\n            arch: arch,\\n            instructionPrice: instructionPrice,\\n            supportedFirstLayers: supportedFirstLayers,\\n            bandwidthPrice: bandwidthPrice,\\n            trustedDirectories: trustedDirectories,\\n            availabilityValue: availabilityValue,\\n            verificationCount: verificationCount\\n            });\\n        emit MediatorRegistered(msg.sender,\\n            arch,\\n            instructionPrice,\\n            bandwidthPrice,\\n            availabilityValue,\\n            verificationCount\\n        );\\n    }\\n\\n    function mediatorAddTrustedDirectory(address directory) public {\\n        mediators[msg.sender].trustedDirectories.push(directory);\\n        emit MediatorAddedTrustedDirectory(msg.sender, directory);\\n    }\\n\\n    function mediatorAddSupportedFirstLayer(uint256 firstLayerHash) public {\\n        mediators[msg.sender].supportedFirstLayers.push(firstLayerHash);\\n        emit MediatorAddedSupportedFirstLayer(msg.sender, firstLayerHash);\\n    }\\n\\n    // function getMediatorTrustedDirectories(address mediator) public view returns (address[] memory) {\\n    //     return mediators[mediator].trustedDirectories;\\n    // }\\n\\n    function registerResourceProvider(\\n        Architecture arch,\\n        uint256 timePerInstruction\\n    ) public {\\n        // console.log(\\\"-----------------------------> RUNNING: ResourceProviderRegistered CHANGE1\\\");\\n        address[] memory trustedMediators;\\n        address[] memory trustedDirectories;\\n        uint256[] memory supportedFirstLayers;\\n        resourceProviders[msg.sender] = ResourceProvider({\\n            trustedMediators: trustedMediators,\\n            supportedFirstLayers: supportedFirstLayers,\\n            arch: arch,\\n            timePerInstruction: timePerInstruction,\\n            trustedDirectories: trustedDirectories\\n        });\\n        // console.log(\\\"-----------------------------> ABOUT TO EMIT EVENT: ResourceProviderRegistered\\\");\\n        emit ResourceProviderRegistered(msg.sender,\\n            arch,\\n            timePerInstruction,\\n            penaltyRate\\n        );\\n        // console.log(\\\"-----------------------------> EVENT EMITTED: ResourceProviderRegistered\\\");\\n    }\\n\\n    function resourceProviderAddTrustedMediator(address mediator) public {\\n        resourceProviders[msg.sender].trustedMediators.push(mediator);\\n        emit ResourceProviderAddedTrustedMediator(msg.sender, mediator);\\n    }\\n\\n    function resourceProviderAddTrustedDirectory(address directory) public {\\n        resourceProviders[msg.sender].trustedDirectories.push(directory);\\n        emit ResourceProviderAddedTrustedDirectory(msg.sender, directory);\\n    }\\n\\n    function resourceProviderAddSupportedFirstLayer(uint256 firstLayerHash) public {\\n        resourceProviders[msg.sender].supportedFirstLayers.push(firstLayerHash);\\n        emit ResourceProviderAddedSupportedFirstLayer(msg.sender, firstLayerHash);\\n    }\\n\\n    // function getResourceProviderTrustedMediators(address rp) public view returns (address[] memory) {\\n    //     return resourceProviders[rp].trustedMediators;\\n    // }\\n\\n    // function getResourceProviderTrustedDirectories(address rp) public view returns(address[] memory) {\\n    //     return resourceProviders[rp].trustedDirectories;\\n    // }\\n\\n    function registerJobCreator(\\n    ) public {\\n        address[] memory trustedMediators;\\n        jobCreators[msg.sender] = JobCreator({\\n            trustedMediators: trustedMediators,\\n            itShouldntBeHere: 0\\n        });\\n        emit JobCreatorRegistered(msg.sender, penaltyRate);\\n    }\\n\\n    // function getJobCreatorTrustedMediators(address jc) public view returns (address[] memory) {\\n    //     return jobCreators[jc].trustedMediators;\\n    // }\\n    function jobCreatorAddTrustedMediator(address mediator) public {\\n        jobCreators[msg.sender].trustedMediators.push(mediator);\\n        emit JobCreatorAddedTrustedMediator(msg.sender, mediator);\\n    }\\n\\n    function postResOffer(\\n        uint256 instructionPrice,\\n        uint256 instructionCap,\\n\\n        uint256 memoryCap,\\n        uint256 localStorageCap,\\n\\n        uint256 bandwidthCap,\\n        uint256 bandwidthPrice,\\n\\n        uint256 matchIncentive,\\n\\n        uint256 verificationCount,\\n\\n        uint256 misc\\n    ) public payable {\\n        // require(resourceProviders[msg.sender].trustedMediators.length != 0,\\n        //     \\\"You are not registered as a ResourceProvider\\\");\\n\\n        if (resourceProviders[msg.sender].trustedMediators.length == 0){\\n            emit DebugString(\\\"trustedMediators==0\\\");\\n        }\\n\\n        uint256 depositValue = (instructionPrice * instructionCap +\\n            bandwidthCap * bandwidthPrice) * penaltyRate;\\n\\n        if (msg.value <= depositValue){\\n            emit DebugString(\\\"msg.value <= depositValue\\\");\\n            emit DebugUint(msg.value);\\n            emit DebugUint(depositValue);\\n        }\\n\\n        // require(msg.value >= depositValue,\\n        //    \\\"You need to deposit more money to offer this resource\\\");\\n\\n        uint256 index = resourceOffers.push(ResourceOffer({\\n            resProvider: msg.sender,\\n            instructionPrice: instructionPrice,\\n            instructionCap: instructionCap,\\n            memoryCap: memoryCap,\\n            localStorageCap: localStorageCap,\\n            bandwidthCap: bandwidthCap,\\n            bandwidthPrice: bandwidthPrice,\\n            depositValue: msg.value,\\n            matchIncentive: matchIncentive,\\n            verificationCount: verificationCount\\n            })) - 1;\\n\\n        uint256 iroid = misc;\\n        emit ResourceOfferPosted(index,\\n\\n            msg.sender,\\n\\n            instructionPrice,\\n            instructionCap,\\n\\n            memoryCap,\\n            localStorageCap,\\n\\n            bandwidthCap,\\n            bandwidthPrice,\\n\\n            msg.value,\\n\\n            iroid\\n        );\\n\\n        emit EtherTransferred(msg.sender, address(this), msg.value, EtherTransferCause.PostResourceOffer);\\n    }\\n\\n    function postJobOfferPartOne(\\n        uint256 ijoid,\\n        uint256 instructionLimit,\\n        uint256 bandwidthLimit,\\n        uint256 instructionMaxPrice,\\n        uint256 bandwidthMaxPrice,\\n        uint256 completionDeadline,\\n        uint256 matchIncentive\\n    ) public payable {\\n        // require(jobCreators[msg.sender].trustedMediators.length != 0,\\n        //    \\\"You are not registered as a JobCreator\\\");\\n\\n        // require(msg.value >= (instructionLimit * instructionMaxPrice +\\n        //    bandwidthLimit * bandwidthMaxPrice) * penaltyRate,\\n        //    \\\"You need to deposit more money to request this job.\\\");\\n\\n        uint256 index = findJOIndex[msg.sender][ijoid];\\n        if (index == 0) {\\n            index = joIndex;\\n            joIndex++;\\n            findJOIndex[msg.sender][ijoid] = index;\\n        }\\n\\n        // require(jobOfferPartOnePosted[index] == false, \\\"You have already posted a part one for this ijoid.\\\");\\n\\n        JobOfferPartOne memory joPOne = JobOfferPartOne({\\n            jobCreator: msg.sender,\\n            depositValue: msg.value,\\n            instructionLimit: instructionLimit,\\n            bandwidthLimit: bandwidthLimit,\\n            instructionMaxPrice: instructionMaxPrice,\\n            bandwidthMaxPrice: bandwidthMaxPrice,\\n            completionDeadline: completionDeadline,\\n            matchIncentive: matchIncentive\\n        });\\n\\n        jobOffersPartOne[index] = joPOne;\\n        jobOfferPartOnePosted[index] = true;\\n\\n        emit JobOfferPostedPartOne(\\n            index,\\n            ijoid,\\n            msg.sender,\\n            instructionLimit,\\n            bandwidthLimit,\\n            instructionMaxPrice,\\n            bandwidthMaxPrice,\\n            completionDeadline,\\n            msg.value,\\n            matchIncentive\\n        );\\n\\n        emit EtherTransferred(msg.sender, address(this), msg.value, EtherTransferCause.PostJobOffer);\\n    }\\n\\n    function postJobOfferPartTwo(\\n        uint256 ijoid,\\n        uint256 ramLimit,\\n        uint256 localStorageLimit,\\n        string uri,\\n        address directory,\\n        uint256 jobHash,\\n        Architecture arch,\\n        string extras\\n    ) public {\\n\\n        // require(jobCreators[msg.sender].trustedMediators.length != 0,\\n        //    \\\"You are not registered as a JobCreator\\\");\\n\\n        uint256 index = findJOIndex[msg.sender][ijoid];\\n        if (index == 0) {\\n            index = joIndex;\\n            joIndex++;\\n            findJOIndex[msg.sender][ijoid] = index;\\n        }\\n\\n        // require(jobOfferPartTwoPosted[index] == false, \\\"You have already posted a part two for this ijoid.\\\");\\n\\n        JobOfferPartTwo memory joPTwo = JobOfferPartTwo({\\n            jobCreator: msg.sender,\\n            ramLimit: ramLimit,\\n            localStorageLimit: localStorageLimit,\\n            uri: uri,\\n            directory: directory,\\n            jobHash: jobHash,\\n            arch: arch,\\n            extras: extras\\n        });\\n\\n        jobOffersPartTwo[index] = joPTwo;\\n        jobOfferPartTwoPosted[index] = true;\\n\\n        emit JobOfferPostedPartTwo(\\n            index,\\n            msg.sender,\\n            jobHash,\\n            uri,\\n            directory,\\n            arch,\\n            ramLimit,\\n            localStorageLimit,\\n            extras\\n        );\\n    }\\n\\n    function cancelJobOffer(uint256 offerId) public {\\n        // require(jobOffersPartOne[offerId].jobCreator == msg.sender, \\\"This offer is not yours.\\\");\\n        // require(jobOfferMatched[offerId] == false, \\\"You cannot cancel a jop which is running.\\\");\\n\\n        //msg.sender.transfer(jobOffersPartOne[offerId].depositValue);\\n        jobOffersPartOne[offerId].depositValue = 0;\\n\\n        isJobOfferCanceled[offerId] = true;\\n\\n        emit JobOfferCanceled(offerId);\\n        emit EtherTransferred(address(this), msg.sender, jobOffersPartOne[offerId].depositValue, EtherTransferCause.CancelJobOffer);\\n    }\\n\\n    function cancelResOffer(uint256 offerId) public {\\n        // require(resourceOffers[offerId].resProvider == msg.sender, \\\"This offer is not yours.\\\");\\n        // require(resOfferMatched[offerId] == false, \\\"You cannot cancel a jop which is running.\\\");\\n\\n        //msg.sender.transfer(resourceOffers[offerId].depositValue);\\n        resourceOffers[offerId].depositValue = 0;\\n\\n        isResOfferCanceled[offerId] = true;\\n\\n        emit ResourceOfferCanceled(offerId);\\n        emit EtherTransferred(address(this), msg.sender, resourceOffers[offerId].depositValue, EtherTransferCause.CancelResOffer);\\n    }\\n\\n    function postMatch(\\n        uint256 jobOfferId,\\n        uint256 resourceOfferId,\\n        address mediator\\n    ) public returns (uint256){\\n        // require(solvers[msg.sender] == true, \\\"You are not a trusted solver\\\");\\n        // require(isJobOfferCanceled[jobOfferId] == false,\\n        //     \\\"Job offer is already canceled.\\\");\\n\\n        // require(isResOfferCanceled[resourceOfferId] == false,\\n        //     \\\"Resource offer is already canceled.\\\");\\n\\n        // require(jobOfferMatched[jobOfferId] == false,\\n        //     \\\"Job offer is already matched\\\");\\n\\n        // require(resOfferMatched[resourceOfferId] == false,\\n        //     \\\"Resource offer is already matched\\\");\\n\\n        // require(jobOfferPartOnePosted[jobOfferId] == true,\\n        //     \\\"The job offer was not completed\\\");\\n        // require(jobOfferPartTwoPosted[jobOfferId] == true,\\n        //     \\\"The job offer was not completed\\\");\\n        // bool RPTrustM = false;\\n        // bool JCTrustM = false;\\n        // bool RPTrustD = false;\\n        // bool MTrustD  = false;\\n        // bool RPSupportFirstLayer = false;\\n        // bool MSupportFirstLayer = false;\\n\\n        // uint i = 0;\\n\\n        // for (i = 0; i < resourceProviders[resourceOffers[resourceOfferId].resProvider].trustedMediators.length; i++)\\n        //     if (resourceProviders[resourceOffers[resourceOfferId].resProvider].trustedMediators[i] == mediator)\\n        //         RPTrustM = true;\\n\\n        // for (i = 0; i < jobCreators[jobOffersPartOne[jobOfferId].jobCreator].trustedMediators.length; i++)\\n        //     if (jobCreators[jobOffersPartOne[jobOfferId].jobCreator].trustedMediators[i] == mediator)\\n        //         JCTrustM = true;\\n\\n        // for (i = 0; i < resourceProviders[resourceOffers[resourceOfferId].resProvider].trustedDirectories.length; i++)\\n        //     if (resourceProviders[resourceOffers[resourceOfferId].resProvider].trustedDirectories[i] == jobOffersPartTwo[jobOfferId].directory)\\n        //         RPTrustD = true;\\n\\n        // for (i = 0; i < mediators[mediator].trustedDirectories.length; i++)\\n        //     if (mediators[mediator].trustedDirectories[i] == jobOffersPartTwo[jobOfferId].directory)\\n        //         RPTrustD = true;\\n\\n        // for (i = 0; i < resourceProviders[resourceOffers[resourceOfferId].resProvider].supportedFirstLayers.length; i++)\\n        //     if (resourceProviders[resourceOffers[resourceOfferId].resProvider].supportedFirstLayers[i] == jobOffersPartTwo[jobOfferId].firstLayerHash)\\n        //         RPSupportFirstLayer = true;\\n\\n        // for (i = 0; i < mediators[mediator].supportedFirstLayers.length; i++)\\n        //     if (mediators[mediator].supportedFirstLayers[i] == jobOffersPartTwo[jobOfferId].firstLayerHash)\\n        //         MSupportFirstLayer = true;\\n\\n\\n        // require(\\n        //     resourceOffers[resourceOfferId].instructionCap >= jobOffersPartOne[jobOfferId].instructionLimit &&\\n        //     resourceOffers[resourceOfferId].memoryCap >= jobOffersPartTwo[jobOfferId].ramLimit &&\\n        //     resourceOffers[resourceOfferId].localStorageCap >= jobOffersPartTwo[jobOfferId].localStorageLimit &&\\n        //     resourceOffers[resourceOfferId].instructionPrice <= jobOffersPartOne[jobOfferId].instructionMaxPrice &&\\n        //     resourceProviders[resourceOffers[resourceOfferId].resProvider].arch == jobOffersPartTwo[jobOfferId].arch && mediators[mediator].arch == resourceProviders[resourceOffers[resourceOfferId].resProvider].arch &&\\n        //     resourceOffers[resourceOfferId].verificationCount <= mediators[mediator].verificationCount &&\\n        //     now + resourceProviders[resourceOffers[resourceOfferId].resProvider].timePerInstruction * jobOffersPartOne[jobOfferId].instructionLimit <= jobOffersPartOne[jobOfferId].completionDeadline &&\\n        //     RPTrustD && RPTrustM && JCTrustM && MTrustD && RPSupportFirstLayer && MSupportFirstLayer,\\n        //     \\\"The offers cannot be matched\\\"\\n        // );\\n\\n\\n        uint256 index = matches.push(Match({\\n            resourceOffer: resourceOfferId,\\n            jobOffer: jobOfferId,\\n            mediator: mediator\\n        })) - 1;\\n\\n        jobOfferMatched[jobOfferId] = true;\\n        resOfferMatched[resourceOfferId] = true;\\n\\n        uint256 matchIncentive = jobOffersPartOne[jobOfferId].matchIncentive +\\n                resourceOffers[resourceOfferId].matchIncentive;\\n\\n        //msg.sender.transfer(matchIncentive);\\n\\n        emit EtherTransferred(address(this), msg.sender, matchIncentive, EtherTransferCause.PostMatch);\\n\\n        emit Matched(msg.sender, index, jobOfferId, resourceOfferId, mediator);\\n\\n        return index;\\n    }\\n\\n    function postResult(\\n        uint256 matchId,\\n        uint256 jobOfferId,\\n        ResultStatus status,\\n        string uri,\\n        uint256 hash,\\n        uint256 instructionCount,\\n        uint256 bandwidthUsage\\n    ) public returns (uint256) {\\n        require(jobOfferId >= 0);\\n        // require (resourceOffers[matches[matchId].resourceOffer].resProvider == msg.sender,\\n        //     \\\"You are not supposed to publish result for this match.\\\");\\n\\n        // require(isMatchClosed[matchId] == false,\\n        //     \\\"This match is already closed.\\\");\\n\\n        uint256 index = results.push(JobResult({\\n            status: status,\\n            matchId: matchId,\\n            uri: uri,\\n            instructionCount: instructionCount,\\n            bandwidthUsage: bandwidthUsage,\\n            hash: hash,\\n            reacted: Reaction.None,\\n            timestamp: now\\n            })) - 1;\\n\\n        matchToResult[matchId] = index;\\n        resultAvailable[matchId] = true;\\n\\n        emit ResultPosted(\\n            msg.sender,\\n            index,\\n            matchId,\\n            status,\\n            uri,\\n            hash,\\n            instructionCount,\\n            bandwidthUsage\\n        );\\n\\n        return index;\\n    }\\n\\n    function rejectResult(uint256 resultId, uint256 jobOfferId) public {\\n        require(jobOfferId >= 0);\\n        // require(jobOffersPartOne[matches[results[resultId].matchId].jobOffer].jobCreator == msg.sender,\\n        //     \\\"You cannot reject a result which is not yours.\\\");\\n        // require(results[resultId].reacted == Reaction.None,\\n        //     \\\"You have already reacted to this result\\\");\\n        // require(isMatchClosed[results[resultId].matchId] == false,\\n        //     \\\"This match is already closed.\\\");\\n\\n        results[resultId].reacted = Reaction.Rejected;\\n        mediationRequested[results[resultId].matchId] = true;\\n\\n        emit ResultReaction(msg.sender, resultId,results[resultId].matchId,  1);\\n\\n        emit DebugString(\\\"result rejected\\\");\\n\\n        emit JobAssignedForMediation(msg.sender, results[resultId].matchId);\\n    }\\n\\n    function acceptResult(uint256 resultId, uint256 jobOfferId) public returns (uint256) {\\n        require(jobOfferId >= 0);\\n        //require(jobOffers[matches[results[resultId].matchId].jobOffer].jobCreator == msg.sender ||\\n        //    (resourceOffers[matches[results[resultId].matchId].resourceOffer].resProvider == msg.sender && results[resultId].timestamp + reactionDeadline > now),\\n        //    \\\"You cannot reject a result which is not yours or deadline has not been missed yet.\\\");\\n        //require(results[resultId].reacted == Reaction.None,\\n        //    \\\"You have already reacted to this result\\\");\\n        //require(isMatchClosed[results[resultId].matchId] == false,\\n        //    \\\"This match is already closed.\\\");\\n\\n        results[resultId].reacted = Reaction.Accepted;\\n\\n        emit ResultReaction(msg.sender, resultId,results[resultId].matchId,  0);\\n\\n        emit DebugString(\\\"result accepted\\\");\\n\\n        return close(results[resultId].matchId);\\n\\n    }\\n\\n\\n    function postMediationResult(\\n        uint256 matchId,\\n        uint256 jobOfferId,\\n        ResultStatus status,\\n        string uri,\\n\\n        uint256 hash,\\n\\n        uint256 instructionCount,\\n        uint256 bandwidthUsage,\\n\\n        Verdict verdict,\\n        Party faultyParty\\n    ) public returns (Party) {\\n        require(jobOfferId >= 0);\\n        // require(matches[matchId].mediator == msg.sender, \\\"You are not this job's mediator\\\");\\n        // require(mediationRequested[matchId] == true, \\\"JC did not request mediation for this match.\\\");\\n        // require(mediated[matchId] == false, \\\"You have already mediated this match.\\\");\\n\\n        mediated[matchId] = true;\\n\\n        uint256 index = mediatorResults.push(MediatorResult({\\n            status: status,\\n            uri: uri,\\n            matchId: matchId,\\n            hash: hash,\\n            instructionCount: instructionCount,\\n            bandwidthUsage: bandwidthUsage,\\n            verdict: verdict,\\n            faultyParty: faultyParty\\n        })) - 1;\\n\\n        uint256 cost = (instructionCount * mediators[msg.sender].instructionPrice +\\n                        bandwidthUsage * mediators[msg.sender].bandwidthPrice) *\\n                        resourceOffers[matches[matchId].resourceOffer].verificationCount;\\n\\n        // emit MediationResultPosted( index, faultyParty, verdict, matchId,\\n        //                             status, uri, hash, instructionCount, bandwidthUsage, cost);\\n\\n        emit MediationResultPosted(matchId, msg.sender, index, faultyParty, verdict, status, uri, hash, instructionCount, cost);\\n\\n        punish(matchId, faultyParty);\\n        //msg.sender.transfer(cost);\\n        emit EtherTransferred(address(this), msg.sender, cost, EtherTransferCause.Mediation);\\n        emit MatchClosed(matchId, cost);\\n        return faultyParty;\\n    }\\n\\n    function punish(uint256 matchId, Party faultyParty) private {\\n        // require(isMatchClosed[matchId] == false, \\\"This match is already closed.\\\");\\n        isMatchClosed[matchId] = true;\\n\\n        ResourceOffer memory ro = resourceOffers[matches[matchId].resourceOffer];\\n        JobOfferPartOne memory jo = jobOffersPartOne[matches[matchId].jobOffer];\\n\\n        uint256 roDeposit = ro.depositValue;\\n        uint256 joDeposit = jo.depositValue;\\n\\n        jo.depositValue = 0;\\n        ro.depositValue = 0;\\n\\n        uint256 joValue = jo.bandwidthLimit * jo.bandwidthMaxPrice + jo.instructionLimit * jo.instructionMaxPrice;\\n        uint256 roValue = ro.bandwidthCap * ro.bandwidthPrice + ro.instructionCap * ro.instructionPrice;\\n\\n        if (faultyParty == Party.JobCreator) {\\n\\n            //address(uint160(ro.resProvider)).transfer(roDeposit + roValue);\\n            emit EtherTransferred(address(this), ro.resProvider, roDeposit + roValue, EtherTransferCause.Punishment);\\n\\n        } else if (faultyParty == Party.ResourceProvider) {\\n\\n            //address(uint160(jo.jobCreator)).transfer(joDeposit + joValue);\\n            emit EtherTransferred(address(this), jo.jobCreator, joDeposit + joValue, EtherTransferCause.Punishment);\\n        }\\n    }\\n\\n    function close(uint256 matchId) private returns (uint256) {\\n        //require(results[matchToResult[matchId]].reacted == Reaction.Accepted,\\n        //    \\\"The job is not done yet.\\\");\\n\\n        JobResult memory r = results[matchToResult[matchId]];\\n        ResourceOffer memory ro = resourceOffers[matches[matchId].resourceOffer];\\n        JobOfferPartOne memory jo = jobOffersPartOne[matches[matchId].jobOffer];\\n        address m = matches[matchId].mediator;\\n\\n        //require(isMatchClosed[matchId] == false, \\\"This match is already closed.\\\");\\n        isMatchClosed[matchId] = true;\\n\\n        uint256 cost = r.instructionCount * ro.instructionPrice +\\n            r.bandwidthUsage * ro.bandwidthPrice;\\n\\n        uint256 mediatorAvailabilityIncentive = mediators[m].availabilityValue;\\n\\n        uint256 jo_deposit = jo.depositValue;\\n        uint256 ro_deposit = ro.depositValue;\\n\\n        jo.depositValue = 0;\\n        ro.depositValue = 0;\\n\\n        //address(uint160(jo.jobCreator)).transfer(jo_deposit - cost - jo.matchIncentive - mediatorAvailabilityIncentive);\\n        //address(uint160(ro.resProvider)).transfer(jo_deposit + cost - ro.matchIncentive - mediatorAvailabilityIncentive);\\n        //address(uint160(m)).transfer(2 * mediatorAvailabilityIncentive);\\n\\n\\n        emit MatchClosed(matchId, cost);\\n        emit EtherTransferred(address(this), jo.jobCreator, jo_deposit - cost, EtherTransferCause.FinishingJob);\\n        emit EtherTransferred(address(this), ro.resProvider, ro_deposit + cost, EtherTransferCause.FinishingResource);\\n        emit EtherTransferred(address(this), m, 2 * mediatorAvailabilityIncentive, EtherTransferCause.MediatorAvailability);\\n\\n        return cost;\\n    }\\n\\n    function timeout(uint256 matchId, uint256 jobOfferId) public {\\n        require(jobOfferId >= 0);\\n        // require(jobOffersPartOne[matches[matchId].jobOffer].jobCreator == msg.sender,\\n        //     \\\"You cannot make a timeout on this offer\\\");\\n        // require(jobOffersPartOne[matches[matchId].jobOffer].completionDeadline < now,\\n        //     \\\"RP has more time to finish this job\\\");\\n        // require(isMatchClosed[matchId] == false,\\n        //     \\\"This match is closed.\\\");\\n\\n        punish(matchId, Party.ResourceProvider);\\n    }\\n\\n    function receiveValues(address toAccount, uint256 amount) public administrative {\\n        address(uint160(toAccount)).transfer(amount);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xd214bd06dd98286cc1bb39d954212b7e0b5eff3bc28c41779bd6ef456958e848\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = 0x000000000000000000636F6e736F6c652e6c6f67;\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\t/// @solidity memory-safe-assembly\\n\\t\\tassembly {\\n\\t\\t\\tpop(staticcall(gas(), consoleAddress, add(payload, 32), mload(payload), 0, 0))\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0xfb9a1c05ce82a728e108b58b71a09f13d9586fc70555e82d190e9b2f5a6183af\"}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075534801561005657600080fd5b5061453f806100666000396000f300608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302ddffbe146101c2578063095ea6ae146101ef5780630d4722f6146102f35780632245ae9e1461034b57806329e99f071461038e5780633093a889146103bb5780633be1bfe8146103f2578063413ba3021461044e578063415919921461047b5780634c4a76e5146104a85780634fea39c2146104df57806375158b701461050f57806378e75f0f1461054957806380cde9bc1461059657806382792410146105c35780638a54fcee14610606578063a1bab44714610649578063a7c2c44d14610676578063ae625e56146106a3578063b61c4e8614610713578063c1a1668f146107f7578063cf72e7bd1461080e578063d5fb4e1814610851578063dadb2ebd146108d2578063dfbeeff71461091d578063ff91ab04146109d9575b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5768792061726520796f752063616c6c696e67206d653f00000000000000000081525060200191505060405180910390fd5b3480156101ce57600080fd5b506101ed60048036038101908080359060200190929190505050610a44565b005b3480156101fb57600080fd5b506102f1600480360381019080803590602001909291908035906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b4e565b005b3480156102ff57600080fd5b50610349600480360381019080803560ff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610f9a565b005b34801561035757600080fd5b5061038c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114b565b005b34801561039a57600080fd5b506103b96004803603810190808035906020019092919050505061128b565b005b3480156103c757600080fd5b506103f0600480360381019080803590602001909291908035906020019092919050505061133d565b005b61044c6004803603810190808035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061156e565b005b34801561045a57600080fd5b50610479600480360381019080803590602001909291905050506118d0565b005b34801561048757600080fd5b506104a6600480360381019080803590602001909291905050506119aa565b005b3480156104b457600080fd5b506104dd6004803603810190808035906020019092919080359060200190929190505050611a84565b005b3480156104eb57600080fd5b5061050d600480360381019080803560ff169060200190929190505050611aa3565b005b34801561051b57600080fd5b50610547600480360381019080803560ff16906020019092919080359060200190929190505050611b65565b005b34801561055557600080fd5b50610594600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cfb565b005b3480156105a257600080fd5b506105c160048036038101908080359060200190929190505050611e0f565b005b3480156105cf57600080fd5b50610604600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f71565b005b34801561061257600080fd5b50610647600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120b1565b005b34801561065557600080fd5b50610674600480360381019080803590602001909291905050506121f1565b005b34801561068257600080fd5b506106a1600480360381019080803590602001909291905050506122fd565b005b61071160048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061244b565b005b34801561071f57600080fd5b506107d36004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291908035906020019092919080359060200190929190803560ff169060200190929190803560ff169060200190929190505050612899565b604051808260018111156107e357fe5b60ff16815260200191505060405180910390f35b34801561080357600080fd5b5061080c612d43565b005b34801561081a57600080fd5b5061084f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e34565b005b34801561085d57600080fd5b50610892600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f74565b604051808660018111156108a257fe5b60ff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156108de57600080fd5b506109076004803603810190808035906020019092919080359060200190929190505050612fb7565b6040518082815260200191505060405180910390f35b34801561092957600080fd5b506109c36004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001909291908035906020019092919050505061313f565b6040518082815260200191505060405180910390f35b3480156109e557600080fd5b50610a2e6004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133d9565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610add57806002819055507fafb2b5bfefa5580825b0de810f205cc4f63195be2b7581e3a6d86853cda215a8816040518082815260200191505060405180910390a1610b4b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b50565b6000610b586141b5565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000205491506000821415610c2157600754915060076000815480929190600101919050555081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020819055505b610100604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020018881526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001856001811115610c8a57fe5b8152602001848152509050806009600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003019080519060200190610d20929190614232565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610d9657fe5b021790555060e0820151816007019080519060200190610db7929190614232565b509050506001600f600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb08439994d9143544b8ae8aa0550882b0d882037947cab0dfa67fdfbe68b79ed8233878a8a898f8f8b604051808a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001888152602001806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866001811115610e9557fe5b60ff16815260200185815260200184815260200180602001838103835289818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f4b578082015181840152602081019050610f30565b50505050905090810190601f168015610f785780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a150505050505050505050565b60608060e060405190810160405280886001811115610fb557fe5b815260200187815260200186815260200183815260200182815260200185815260200184815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561103f57fe5b0217905550602082015181600101556040820151816002015560608201518160030190805190602001906110749291906142b2565b50608082015181600401908051906020019061109192919061433c565b5060a0820151816005015560c082015181600601559050507f30f100afd350d3923afbf22d61bb461b018387a905b01935a82fd31739f7ecc8338888888888604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186600181111561111257fe5b60ff168152602001858152602001848152602001838152602001828152602001965050505050505060405180910390a150505050505050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fc46f5b1885edcb90bd9c37370760e20924bd0b4815bc3aa0999135f9e7447ba33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600081111515611303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f546869732073686f756c642062652067726561746572207468616e203000000081525060200191505060405180910390fd5b7ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe816040518082815260200191505060405180910390a150565b6000811015151561134d57600080fd5b6001600c8381548110151561135e57fe5b906000526020600020906008020160060160006101000a81548160ff0219169083600281111561138a57fe5b0217905550600160106000600c858154811015156113a457fe5b906000526020600020906008020160020154815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9cf99d589438cb7c5e0d92e45b92b87bcf5a2201479e72e8f31396be4a7505ab3383600c8581548110151561140d57fe5b9060005260206000209060080201600201546001604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a17f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e960405180806020018281038252600f8152602001807f726573756c742072656a6563746564000000000000000000000000000000000081525060200191505060405180910390a17f6e377930a82feda820d86166d6ed1dcbb8cb48305b1d20048584586cb1d424af33600c8481548110151561151057fe5b906000526020600020906008020160020154604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000611578614389565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020549150600082141561164157600754915060076000815480929190600101919050555081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020819055505b610100604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001898152602001888152602001878152602001868152602001858152602001848152509050806008600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050506001600e600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9306115efe7bad07bc21e212f2404b33e7376f164de102ec5e1e1b2938328db7828a338b8b8b8b8b348c604051808b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23330346000604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156118af57fe5b60ff16815260200194505050505060405180910390a1505050505050505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190806001815401808255809150509060018203906000526020600020016000909192909190915055507fa4afa925b503907dc7699e5423d82b67cb3cce8e083875f0b14ae131ba8852d83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190806001815401808255809150509060018203906000526020600020016000909192909190915055507f6addfaf8048be7677397f667c84acb7e875091575bf511939b167e804d13a8fe3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b60008110151515611a9457600080fd5b611a9f8260006136a3565b5050565b7f117173c3f483315f99860ad0cd3da109b9e36f175776c989bee6807ddc7554dd6005604051808267ffffffffffffffff16815260200191505060405180910390a17fc06e1a5e77fb0f268e7a9d333c44019d6d8bb187b960fa3730205da5fa9a242f8160405180826001811115611b1757fe5b60ff16815260200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe60016040518082815260200191505060405180910390a150565b606080606060a060405190810160405280848152602001838152602001828152602001866001811115611b9457fe5b815260200185815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611bf89291906142b2565b506020820151816001019080519060200190611c159291906142b2565b506040820151816002019080519060200190611c3292919061433c565b5060608201518160030160006101000a81548160ff02191690836001811115611c5757fe5b0217905550608082015181600401559050507fc1fa38743bb572e5e75169e44082ca0108a86cbce71a37e7590b45ace4ec80c9338686600054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846001811115611cd257fe5b60ff16815260200183815260200182815260200194505050505060405180910390a15050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611d9d578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611d97573d6000803e3d6000fd5b50611e0b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600682815481101515611e2057fe5b90600052602060002090600a02016001018190555060016017600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe6979ef995dbef56a8afac32269330ca9887368bbc6f449d0ee4c4ff75333146816040518082815260200191505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033600684815481101515611eca57fe5b90600052602060002090600a0201600101546003604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115611f5857fe5b60ff16815260200194505050505060405180910390a150565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f67d4e0df369cb5dee1cb58b6d75040efd1ee99797e4aa4be77057de2830d17693382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f14a79e8259e0076c5c8c81b13bbe7e12e248150c95f1ff3d9e0f2b377f8a15f23382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561228c57806000819055507fc3e81bef45eef27d5efd5d8de49b1398d66e449912912cf50fffdffd283e19e06000546040518082815260200191505060405180910390a16122fa565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b50565b6000600860008381526020019081526020016000206001018190555060016016600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9e67088fa5663596c8d76e745a455b3c500bd75d1bdf673c41be74d362aaeb0b816040518082815260200191505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf2303360086000858152602001908152602001600020600101546002604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561243257fe5b60ff16815260200194505050505060405180910390a150565b600080600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490501415612506577f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e96040518080602001828103825260138152602001807f747275737465644d65646961746f72733d3d300000000000000000000000000081525060200191505060405180910390a15b6000548789028c8e020102925082341115156125f3577f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e96040518080602001828103825260198152602001807f6d73672e76616c7565203c3d206465706f73697456616c75650000000000000081525060200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe346040518082815260200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe836040518082815260200191505060405180910390a15b60016006610140604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481526020018f81526020018e81526020018d81526020018c81526020018b81526020018a8152602001898152602001888152509080600181540180825580915050906001820390600052602060002090600a02016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015550500391508390507f0dbc425a2857617d2e3336b85e820c082e6403f272bdfc7b2805119a0be4412182338e8e8e8e8e8e348a604051808b81526020018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23330346001604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561287557fe5b60ff16815260200194505050505060405180910390a1505050505050505050505050565b6000806000808b101515156128ad57600080fd5b6001601160008e815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600d610100604051908101604052808d60098111156128f657fe5b81526020018c81526020018f81526020018b81526020018a815260200189815260200188600481111561292557fe5b815260200187600181111561293657fe5b8152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548160ff0219169083600981111561298857fe5b021790555060208201518160010190805190602001906129a9929190614232565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360048111156129f657fe5b021790555060e08201518160060160016101000a81548160ff02191690836001811115612a1f57fe5b021790555050500391506006600b8d815481101515612a3a57fe5b906000526020600020906003020160000154815481101515612a5857fe5b90600052602060002090600a020160090154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201548702600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548902010290507f7ceb63365644f6bbea5442cfa989331655f6ff5a3496c75b96308abf6ad7dd148c338487898f8f8f8f8a604051808b81526020018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001898152602001886001811115612b7157fe5b60ff168152602001876004811115612b8557fe5b60ff168152602001866009811115612b9957fe5b60ff16815260200180602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015612bef578082015181840152602081019050612bd4565b50505050905090810190601f168015612c1c5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a1612c3c8c856136a3565b7f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033836005604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115612cdc57fe5b60ff16815260200194505050505060405180910390a17f30139f0bfbfc8bbba69979f515a178952806079af30fba4bc2e2e03e997769fc8c82604051808381526020018281526020019250505060405180910390a183925050509998505050505050505050565b606060408051908101604052808281526020016000815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190612db69291906142b2565b50602082015181600101559050507f4599183a5415a1a36544283668387752f2b7459b061d4c8434642289d6146a9e33600054604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fc8dca6a50f889635c514a90f99165d542d96eb943731beabec830ec3110ace733382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060050154908060060154905085565b6000808210151515612fc857600080fd5b6000600c84815481101515612fd957fe5b906000526020600020906008020160060160006101000a81548160ff0219169083600281111561300557fe5b02179055507f9cf99d589438cb7c5e0d92e45b92b87bcf5a2201479e72e8f31396be4a7505ab3384600c8681548110151561303c57fe5b9060005260206000209060080201600201546000604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a17f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e960405180806020018281038252600f8152602001807f726573756c74206163636570746564000000000000000000000000000000000081525060200191505060405180910390a1613137600c8481548110151561312057fe5b906000526020600020906008020160020154613adb565b905092915050565b6000806000881015151561315257600080fd5b6001600c610100604051908101604052808a600981111561316f57fe5b81526020018981526020018c815260200188815260200187815260200186815260200160028081111561319e57fe5b8152602001428152509080600181540180825580915050906001820390600052602060002090600802016000909192909190915060008201518160000160006101000a81548160ff021916908360098111156131f657fe5b02179055506020820151816001019080519060200190613217929190614232565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600281111561326457fe5b021790555060e08201518160070155505003905080601260008b8152602001908152602001600020819055506001601360008b815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb3fe19402e044036291de642de418822379e8f8be885aaf29638fbc53bd18fa333828b8a8a8a8a8a604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187815260200186600981111561333357fe5b60ff16815260200180602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561338957808201518184015260208101905061336e565b50505050905090810190601f1680156133b65780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a180915050979650505050505050565b60008060006001600b6060604051908101604052808881526020018981526020018773ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505003915060016014600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060016015600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060068581548110151561350657fe5b90600052602060002090600a02016008015460086000888152602001908152602001600020600701540190507f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033836008604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156135d257fe5b60ff16815260200194505050505060405180910390a17fb30a5088883496975973e21a454aafabbe1548041f5c17c2f2e535532f82fbed3383888888604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a181925050509392505050565b6136ab6143e5565b6136b3614389565b6000806000806001601860008a815260200190815260200160002060006101000a81548160ff0219169083151502179055506006600b898154811015156136f657fe5b90600052602060002090600302016000015481548110151561371457fe5b90600052602060002090600a020161014060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050955060086000600b8a8154811015156137f457fe5b906000526020600020906003020160010154815260200190815260200160002061010060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050945085602001519350846020015192506000856020018181525050600086602001818152505084608001518560400151028560a0015186606001510201915085604001518660600151028660e001518760c001510201905060018081111561392157fe5b87600181111561392d57fe5b14156139f4577f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23087600001518387016004604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156139d957fe5b60ff16815260200194505050505060405180910390a1613ad1565b60006001811115613a0157fe5b876001811115613a0d57fe5b1415613ad0577f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23086600001518486016004604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115613ab957fe5b60ff16815260200194505050505060405180910390a15b5b5050505050505050565b6000613ae561444f565b613aed6143e5565b613af5614389565b6000806000806000600c601260008c815260200190815260200160002054815481101515613b1f57fe5b906000526020600020906008020161010060405190810160405290816000820160009054906101000a900460ff166009811115613b5857fe5b6009811115613b6357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613c005780601f10613bd557610100808354040283529160200191613c00565b820191906000526020600020905b815481529060010190602001808311613be357829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115613c4f57fe5b6002811115613c5a57fe5b815260200160078201548152505097506006600b8b815481101515613c7b57fe5b906000526020600020906003020160000154815481101515613c9957fe5b90600052602060002090600a020161014060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050965060086000600b8c815481101515613d7957fe5b906000526020600020906003020160010154815260200190815260200160002061010060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509550600b8a815481101515613e5357fe5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694506001601860008c815260200190815260200160002060006101000a81548160ff0219169083151502179055508660e001518860a00151028760400151896080015102019350600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015492508560200151915086602001519050600086602001818152505060008760200181815250507f30139f0bfbfc8bbba69979f515a178952806079af30fba4bc2e2e03e997769fc8a85604051808381526020018281526020019250505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23087600001518685036006604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561401a57fe5b60ff16815260200194505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23088600001518684016007604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156140d657fe5b60ff16815260200194505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23086856002026009604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561418f57fe5b60ff16815260200194505050505060405180910390a18398505050505050505050919050565b61010060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600181111561422557fe5b8152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061427357805160ff19168380011785556142a1565b828001600101855582156142a1579182015b828111156142a0578251825591602001919060010190614285565b5b5090506142ae91906144ab565b5090565b82805482825590600052602060002090810192821561432b579160200282015b8281111561432a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906142d2565b5b50905061433891906144d0565b5090565b828054828255906000526020600020908101928215614378579160200282015b8281111561437757825182559160200191906001019061435c565b5b50905061438591906144ab565b5090565b61010060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61014060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610100604051908101604052806000600981111561446957fe5b815260200160608152602001600081526020016000815260200160008152602001600081526020016000600281111561449e57fe5b8152602001600081525090565b6144cd91905b808211156144c95760008160009055506001016144b1565b5090565b90565b61451091905b8082111561450c57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016144d6565b5090565b905600a165627a7a72305820dafbbfbacc13f4d1ecb44836e07f68124b996a34f3ca018653204f74f8ca082e0029",
  "deployedBytecode": "0x608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302ddffbe146101c2578063095ea6ae146101ef5780630d4722f6146102f35780632245ae9e1461034b57806329e99f071461038e5780633093a889146103bb5780633be1bfe8146103f2578063413ba3021461044e578063415919921461047b5780634c4a76e5146104a85780634fea39c2146104df57806375158b701461050f57806378e75f0f1461054957806380cde9bc1461059657806382792410146105c35780638a54fcee14610606578063a1bab44714610649578063a7c2c44d14610676578063ae625e56146106a3578063b61c4e8614610713578063c1a1668f146107f7578063cf72e7bd1461080e578063d5fb4e1814610851578063dadb2ebd146108d2578063dfbeeff71461091d578063ff91ab04146109d9575b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5768792061726520796f752063616c6c696e67206d653f00000000000000000081525060200191505060405180910390fd5b3480156101ce57600080fd5b506101ed60048036038101908080359060200190929190505050610a44565b005b3480156101fb57600080fd5b506102f1600480360381019080803590602001909291908035906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b4e565b005b3480156102ff57600080fd5b50610349600480360381019080803560ff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610f9a565b005b34801561035757600080fd5b5061038c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114b565b005b34801561039a57600080fd5b506103b96004803603810190808035906020019092919050505061128b565b005b3480156103c757600080fd5b506103f0600480360381019080803590602001909291908035906020019092919050505061133d565b005b61044c6004803603810190808035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061156e565b005b34801561045a57600080fd5b50610479600480360381019080803590602001909291905050506118d0565b005b34801561048757600080fd5b506104a6600480360381019080803590602001909291905050506119aa565b005b3480156104b457600080fd5b506104dd6004803603810190808035906020019092919080359060200190929190505050611a84565b005b3480156104eb57600080fd5b5061050d600480360381019080803560ff169060200190929190505050611aa3565b005b34801561051b57600080fd5b50610547600480360381019080803560ff16906020019092919080359060200190929190505050611b65565b005b34801561055557600080fd5b50610594600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cfb565b005b3480156105a257600080fd5b506105c160048036038101908080359060200190929190505050611e0f565b005b3480156105cf57600080fd5b50610604600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f71565b005b34801561061257600080fd5b50610647600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120b1565b005b34801561065557600080fd5b50610674600480360381019080803590602001909291905050506121f1565b005b34801561068257600080fd5b506106a1600480360381019080803590602001909291905050506122fd565b005b61071160048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061244b565b005b34801561071f57600080fd5b506107d36004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291908035906020019092919080359060200190929190803560ff169060200190929190803560ff169060200190929190505050612899565b604051808260018111156107e357fe5b60ff16815260200191505060405180910390f35b34801561080357600080fd5b5061080c612d43565b005b34801561081a57600080fd5b5061084f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e34565b005b34801561085d57600080fd5b50610892600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f74565b604051808660018111156108a257fe5b60ff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156108de57600080fd5b506109076004803603810190808035906020019092919080359060200190929190505050612fb7565b6040518082815260200191505060405180910390f35b34801561092957600080fd5b506109c36004803603810190808035906020019092919080359060200190929190803560ff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803590602001909291908035906020019092919050505061313f565b6040518082815260200191505060405180910390f35b3480156109e557600080fd5b50610a2e6004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133d9565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610add57806002819055507fafb2b5bfefa5580825b0de810f205cc4f63195be2b7581e3a6d86853cda215a8816040518082815260200191505060405180910390a1610b4b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b50565b6000610b586141b5565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000205491506000821415610c2157600754915060076000815480929190600101919050555081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c8152602001908152602001600020819055505b610100604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020018881526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001856001811115610c8a57fe5b8152602001848152509050806009600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003019080519060200190610d20929190614232565b5060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff02191690836001811115610d9657fe5b021790555060e0820151816007019080519060200190610db7929190614232565b509050506001600f600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb08439994d9143544b8ae8aa0550882b0d882037947cab0dfa67fdfbe68b79ed8233878a8a898f8f8b604051808a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001888152602001806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866001811115610e9557fe5b60ff16815260200185815260200184815260200180602001838103835289818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610f4b578082015181840152602081019050610f30565b50505050905090810190601f168015610f785780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a150505050505050505050565b60608060e060405190810160405280886001811115610fb557fe5b815260200187815260200186815260200183815260200182815260200185815260200184815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111561103f57fe5b0217905550602082015181600101556040820151816002015560608201518160030190805190602001906110749291906142b2565b50608082015181600401908051906020019061109192919061433c565b5060a0820151816005015560c082015181600601559050507f30f100afd350d3923afbf22d61bb461b018387a905b01935a82fd31739f7ecc8338888888888604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186600181111561111257fe5b60ff168152602001858152602001848152602001838152602001828152602001965050505050505060405180910390a150505050505050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fc46f5b1885edcb90bd9c37370760e20924bd0b4815bc3aa0999135f9e7447ba33382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600081111515611303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f546869732073686f756c642062652067726561746572207468616e203000000081525060200191505060405180910390fd5b7ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe816040518082815260200191505060405180910390a150565b6000811015151561134d57600080fd5b6001600c8381548110151561135e57fe5b906000526020600020906008020160060160006101000a81548160ff0219169083600281111561138a57fe5b0217905550600160106000600c858154811015156113a457fe5b906000526020600020906008020160020154815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9cf99d589438cb7c5e0d92e45b92b87bcf5a2201479e72e8f31396be4a7505ab3383600c8581548110151561140d57fe5b9060005260206000209060080201600201546001604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a17f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e960405180806020018281038252600f8152602001807f726573756c742072656a6563746564000000000000000000000000000000000081525060200191505060405180910390a17f6e377930a82feda820d86166d6ed1dcbb8cb48305b1d20048584586cb1d424af33600c8481548110151561151057fe5b906000526020600020906008020160020154604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b6000611578614389565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020549150600082141561164157600754915060076000815480929190600101919050555081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020819055505b610100604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001898152602001888152602001878152602001868152602001858152602001848152509050806008600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701559050506001600e600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9306115efe7bad07bc21e212f2404b33e7376f164de102ec5e1e1b2938328db7828a338b8b8b8b8b348c604051808b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23330346000604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156118af57fe5b60ff16815260200194505050505060405180910390a1505050505050505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190806001815401808255809150509060018203906000526020600020016000909192909190915055507fa4afa925b503907dc7699e5423d82b67cb3cce8e083875f0b14ae131ba8852d83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190806001815401808255809150509060018203906000526020600020016000909192909190915055507f6addfaf8048be7677397f667c84acb7e875091575bf511939b167e804d13a8fe3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b60008110151515611a9457600080fd5b611a9f8260006136a3565b5050565b7f117173c3f483315f99860ad0cd3da109b9e36f175776c989bee6807ddc7554dd6005604051808267ffffffffffffffff16815260200191505060405180910390a17fc06e1a5e77fb0f268e7a9d333c44019d6d8bb187b960fa3730205da5fa9a242f8160405180826001811115611b1757fe5b60ff16815260200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe60016040518082815260200191505060405180910390a150565b606080606060a060405190810160405280848152602001838152602001828152602001866001811115611b9457fe5b815260200185815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611bf89291906142b2565b506020820151816001019080519060200190611c159291906142b2565b506040820151816002019080519060200190611c3292919061433c565b5060608201518160030160006101000a81548160ff02191690836001811115611c5757fe5b0217905550608082015181600401559050507fc1fa38743bb572e5e75169e44082ca0108a86cbce71a37e7590b45ace4ec80c9338686600054604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846001811115611cd257fe5b60ff16815260200183815260200182815260200194505050505060405180910390a15050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611d9d578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611d97573d6000803e3d6000fd5b50611e0b565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600682815481101515611e2057fe5b90600052602060002090600a02016001018190555060016017600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe6979ef995dbef56a8afac32269330ca9887368bbc6f449d0ee4c4ff75333146816040518082815260200191505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033600684815481101515611eca57fe5b90600052602060002090600a0201600101546003604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115611f5857fe5b60ff16815260200194505050505060405180910390a150565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f67d4e0df369cb5dee1cb58b6d75040efd1ee99797e4aa4be77057de2830d17693382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f14a79e8259e0076c5c8c81b13bbe7e12e248150c95f1ff3d9e0f2b377f8a15f23382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561228c57806000819055507fc3e81bef45eef27d5efd5d8de49b1398d66e449912912cf50fffdffd283e19e06000546040518082815260200191505060405180910390a16122fa565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f596f752063616e6e6f742063616c6c206d65210000000000000000000000000081525060200191505060405180910390fd5b50565b6000600860008381526020019081526020016000206001018190555060016016600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9e67088fa5663596c8d76e745a455b3c500bd75d1bdf673c41be74d362aaeb0b816040518082815260200191505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf2303360086000858152602001908152602001600020600101546002604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561243257fe5b60ff16815260200194505050505060405180910390a150565b600080600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490501415612506577f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e96040518080602001828103825260138152602001807f747275737465644d65646961746f72733d3d300000000000000000000000000081525060200191505060405180910390a15b6000548789028c8e020102925082341115156125f3577f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e96040518080602001828103825260198152602001807f6d73672e76616c7565203c3d206465706f73697456616c75650000000000000081525060200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe346040518082815260200191505060405180910390a17ff0ed029e274dabb7636aeed7333cf47bc8c97dd6eb6d8faea6e9bfbd6620bebe836040518082815260200191505060405180910390a15b60016006610140604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481526020018f81526020018e81526020018d81526020018c81526020018b81526020018a8152602001898152602001888152509080600181540180825580915050906001820390600052602060002090600a02016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015550500391508390507f0dbc425a2857617d2e3336b85e820c082e6403f272bdfc7b2805119a0be4412182338e8e8e8e8e8e348a604051808b81526020018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23330346001604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561287557fe5b60ff16815260200194505050505060405180910390a1505050505050505050505050565b6000806000808b101515156128ad57600080fd5b6001601160008e815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600d610100604051908101604052808d60098111156128f657fe5b81526020018c81526020018f81526020018b81526020018a815260200189815260200188600481111561292557fe5b815260200187600181111561293657fe5b8152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548160ff0219169083600981111561298857fe5b021790555060208201518160010190805190602001906129a9929190614232565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360048111156129f657fe5b021790555060e08201518160060160016101000a81548160ff02191690836001811115612a1f57fe5b021790555050500391506006600b8d815481101515612a3a57fe5b906000526020600020906003020160000154815481101515612a5857fe5b90600052602060002090600a020160090154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201548702600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548902010290507f7ceb63365644f6bbea5442cfa989331655f6ff5a3496c75b96308abf6ad7dd148c338487898f8f8f8f8a604051808b81526020018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001898152602001886001811115612b7157fe5b60ff168152602001876004811115612b8557fe5b60ff168152602001866009811115612b9957fe5b60ff16815260200180602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015612bef578082015181840152602081019050612bd4565b50505050905090810190601f168015612c1c5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a1612c3c8c856136a3565b7f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033836005604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115612cdc57fe5b60ff16815260200194505050505060405180910390a17f30139f0bfbfc8bbba69979f515a178952806079af30fba4bc2e2e03e997769fc8c82604051808381526020018281526020019250505060405180910390a183925050509998505050505050505050565b606060408051908101604052808281526020016000815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190612db69291906142b2565b50602082015181600101559050507f4599183a5415a1a36544283668387752f2b7459b061d4c8434642289d6146a9e33600054604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fc8dca6a50f889635c514a90f99165d542d96eb943731beabec830ec3110ace733382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060050154908060060154905085565b6000808210151515612fc857600080fd5b6000600c84815481101515612fd957fe5b906000526020600020906008020160060160006101000a81548160ff0219169083600281111561300557fe5b02179055507f9cf99d589438cb7c5e0d92e45b92b87bcf5a2201479e72e8f31396be4a7505ab3384600c8681548110151561303c57fe5b9060005260206000209060080201600201546000604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a17f20670ef4ff6910e98e7c43650896cc0feeab168b4ca974d0748d31c42706a1e960405180806020018281038252600f8152602001807f726573756c74206163636570746564000000000000000000000000000000000081525060200191505060405180910390a1613137600c8481548110151561312057fe5b906000526020600020906008020160020154613adb565b905092915050565b6000806000881015151561315257600080fd5b6001600c610100604051908101604052808a600981111561316f57fe5b81526020018981526020018c815260200188815260200187815260200186815260200160028081111561319e57fe5b8152602001428152509080600181540180825580915050906001820390600052602060002090600802016000909192909190915060008201518160000160006101000a81548160ff021916908360098111156131f657fe5b02179055506020820151816001019080519060200190613217929190614232565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600281111561326457fe5b021790555060e08201518160070155505003905080601260008b8152602001908152602001600020819055506001601360008b815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb3fe19402e044036291de642de418822379e8f8be885aaf29638fbc53bd18fa333828b8a8a8a8a8a604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187815260200186600981111561333357fe5b60ff16815260200180602001858152602001848152602001838152602001828103825286818151815260200191508051906020019080838360005b8381101561338957808201518184015260208101905061336e565b50505050905090810190601f1680156133b65780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a180915050979650505050505050565b60008060006001600b6060604051908101604052808881526020018981526020018773ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505003915060016014600088815260200190815260200160002060006101000a81548160ff02191690831515021790555060016015600087815260200190815260200160002060006101000a81548160ff02191690831515021790555060068581548110151561350657fe5b90600052602060002090600a02016008015460086000888152602001908152602001600020600701540190507f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23033836008604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156135d257fe5b60ff16815260200194505050505060405180910390a17fb30a5088883496975973e21a454aafabbe1548041f5c17c2f2e535532f82fbed3383888888604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a181925050509392505050565b6136ab6143e5565b6136b3614389565b6000806000806001601860008a815260200190815260200160002060006101000a81548160ff0219169083151502179055506006600b898154811015156136f657fe5b90600052602060002090600302016000015481548110151561371457fe5b90600052602060002090600a020161014060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050955060086000600b8a8154811015156137f457fe5b906000526020600020906003020160010154815260200190815260200160002061010060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481525050945085602001519350846020015192506000856020018181525050600086602001818152505084608001518560400151028560a0015186606001510201915085604001518660600151028660e001518760c001510201905060018081111561392157fe5b87600181111561392d57fe5b14156139f4577f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23087600001518387016004604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156139d957fe5b60ff16815260200194505050505060405180910390a1613ad1565b60006001811115613a0157fe5b876001811115613a0d57fe5b1415613ad0577f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23086600001518486016004604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826009811115613ab957fe5b60ff16815260200194505050505060405180910390a15b5b5050505050505050565b6000613ae561444f565b613aed6143e5565b613af5614389565b6000806000806000600c601260008c815260200190815260200160002054815481101515613b1f57fe5b906000526020600020906008020161010060405190810160405290816000820160009054906101000a900460ff166009811115613b5857fe5b6009811115613b6357fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613c005780601f10613bd557610100808354040283529160200191613c00565b820191906000526020600020905b815481529060010190602001808311613be357829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166002811115613c4f57fe5b6002811115613c5a57fe5b815260200160078201548152505097506006600b8b815481101515613c7b57fe5b906000526020600020906003020160000154815481101515613c9957fe5b90600052602060002090600a020161014060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152602001600982015481525050965060086000600b8c815481101515613d7957fe5b906000526020600020906003020160010154815260200190815260200160002061010060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815250509550600b8a815481101515613e5357fe5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694506001601860008c815260200190815260200160002060006101000a81548160ff0219169083151502179055508660e001518860a00151028760400151896080015102019350600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015492508560200151915086602001519050600086602001818152505060008760200181815250507f30139f0bfbfc8bbba69979f515a178952806079af30fba4bc2e2e03e997769fc8a85604051808381526020018281526020019250505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23087600001518685036006604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561401a57fe5b60ff16815260200194505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23088600001518684016007604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260098111156140d657fe5b60ff16815260200194505050505060405180910390a17f7e69a0d958a5252709f48635ae2d7514bc34ffc5f64e5b2aa70336d3e8bfcdf23086856002026009604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600981111561418f57fe5b60ff16815260200194505050505060405180910390a18398505050505050505050919050565b61010060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600181111561422557fe5b8152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061427357805160ff19168380011785556142a1565b828001600101855582156142a1579182015b828111156142a0578251825591602001919060010190614285565b5b5090506142ae91906144ab565b5090565b82805482825590600052602060002090810192821561432b579160200282015b8281111561432a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906142d2565b5b50905061433891906144d0565b5090565b828054828255906000526020600020908101928215614378579160200282015b8281111561437757825182559160200191906001019061435c565b5b50905061438591906144ab565b5090565b61010060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61014060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b610100604051908101604052806000600981111561446957fe5b815260200160608152602001600081526020016000815260200160008152602001600081526020016000600281111561449e57fe5b8152602001600081525090565b6144cd91905b808211156144c95760008160009055506001016144b1565b5090565b90565b61451091905b8082111561450c57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016144d6565b5090565b905600a165627a7a72305820dafbbfbacc13f4d1ecb44836e07f68124b996a34f3ca018653204f74f8ca082e0029",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}