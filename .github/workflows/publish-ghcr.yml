name: Publish to ghcr

on:
  push:
    branches:

    tags:

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO: ${{github.repository}}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Qemu
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create builder
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker context create multi-arch-build
          docker buildx create --use multi-arch-build

  test-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Test CLI
        run: |
          set -x
          ./stack reset
          ./stack start
          ./stack submitjob --template cowsay:v0.0.1 --params "ohai from CI"

  test-contract-unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Test smart contract
        shell: bash
        run: |
          set -x
          ./stack reset
          ./stack unit-tests

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Qemu
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Create builder
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker context create multi-arch-build
          docker buildx create --use multi-arch-build

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          # base for tags
          images: |
            ${{ env.REGISTRY}}/${{github.repository_owner}}/lilypad-modicum
            ${{ env.REGISTRY}}/${{github.repository_owner}}/resource-provider
            ${{ env.REGISTRY}}/${{github.repository_owner}}/mediator 
            ${{ env.REGISTRY}}/${{github.repository}}/lilypad-modicum
            ${{ env.REGISTRY}}/${{github.repository}}/resource-provider
            ${{ env.REGISTRY}}/${{github.repository}}/mediator
          tags: |
            type=schedule
            type=sha,format=short

            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Evaluate all tags
        run: |

          echo meta tags
          echo "${{ steps.meta.outputs.tags }}"

      - name: Setup prior to docker build
        shell: bash
        run: |
          set -x
          # Build contract
          ./stack reset
          # Build and push docker images
          # export DOCKER_CLI_EXPERIMENTAL=enabled

      - name: Build and push Docker image
        # env:
        #   DOCKER_CLI_EXPERIMENTAL: enabled #already enabled
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels}}
          github-token: ${{github.token}}
          platforms: linux/arm64,linux/amd64

      # - name: Build multiarch docker image and push
      #   shell: bash
      #   run: |
      #     set -x
      #     # Build contract
      #     ./stack reset
      #     # Build and push docker images
      #     export DOCKER_CLI_EXPERIMENTAL=enabled
      #     for X in modicum resource-provider mediator; do
      #       docker buildx build --target $X --push \
      #         --platform linux/arm64,linux/amd64 \
      #         -t ${{env.REGISTRY}}/${{github.repository_owner}}/lilypad-$X:$(git rev-parse --short HEAD) .
      #     done
